# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nbScjvDLZeupn4k9xIPLhQUJx6H8PJ-6
"""

from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
import re
import nltk
from nltk.corpus import stopwords

nltk.download('stopwords')

def preprocess(text):
    text = text.lower()
    text = re.sub(r'[^a-z\s]','', text)
    text = re.sub(r'\s+',' ', text).strip()  # Replace multiple spaces with a single space and strip leading/trailing spaces

    stop_words = set(stopwords.words('english'))
    text = ' '.join([word for word in text.split() if word not in stop_words])

    return text.strip()

# Example input
job_description = """
We are looking for a data scientist with experience in Python, machine learning,
and data visualization. Knowledge of SQL and cloud services like AWS is a plus.
"""

resume = """
Experienced data scientist skilled in Python, machine learning,
data visualization, and SQL. Worked on AWS-based deployments.
"""

# Preprocess text
job_clean = preprocess(job_description)
resume_clean = preprocess(resume)

# Check if either is empty
if not job_clean or not resume_clean:
    print("Error: One of the inputs is empty after preprocessing.")
else:
    # TF-IDF vectorization
    vectorizer = TfidfVectorizer()
    tfidf_matrix = vectorizer.fit_transform([job_clean, resume_clean])

    # Cosine similarity
    cosine_sim = cosine_similarity(tfidf_matrix[0:1], tfidf_matrix[1:2])[0][0]
    match_percentage = round(cosine_sim * 100, 2)

    print(f"Resume-Job Description Match: {match_percentage}%")